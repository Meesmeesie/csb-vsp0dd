{"version":3,"file":"component---src-pages-blog-tsx-f53d7cf8299cf488f07a.js","mappings":"oMAoCA,EA1BiB,SAAC,GAAD,QACfA,KACEC,KAFa,IAGXC,OAAUC,EAHC,EAGDA,KAAMC,EAHL,EAGKA,KAHL,IAIXC,YAAeC,EAJJ,EAIIA,OAAQC,EAJZ,EAIYA,MAJZ,OAQf,uBAAKC,UAAU,YACb,gBAAC,EAAAC,KAAD,CAAMD,UAAU,QAAQE,GAAIN,GACzBG,GAEH,0BAAKJ,GACL,8BACK,IACFG,GACCA,EAAOK,KAAI,SAACC,EAAMC,GAAP,OACT,gBAAC,EAAAC,SAAD,CAAUC,IAAKH,EAAKI,IAClB,4BAAOJ,EAAKK,OACXC,EAAAA,EAAAA,GAAqBL,EAAGP,EAAOa,e,UCqB5C,EAvCqB,SAAC,GAAD,IAAGnB,EAAH,EAAGA,KAAH,OACnB,gBAACoB,EAAA,EAAD,CAAQb,MAAM,mBACZ,wBAAMC,UAAU,wBACZR,EAAKqB,MAAMC,MAAMH,QAAU,+CAC5BnB,EAAKqB,MAAMC,MAAMX,KAAI,SAAAV,GAAI,OACxB,gBAAC,EAAD,CAAUc,IAAKd,EAAKA,KAAKC,OAAOE,KAAMJ,KAAMC,W,qDChB7C,IAAMiB,EAAuB,SAACK,EAAeJ,GAClD,OAAII,EAAQJ,EAAS,EAAU,KAC3BI,IAAUJ,EAAS,EAAU,QAC1B","sources":["webpack://nodejs-website/./src/components/BlogCard/index.tsx","webpack://nodejs-website/./src/pages/blog.tsx","webpack://nodejs-website/./src/util/getTerminatingString.ts"],"sourcesContent":["import { Link } from 'gatsby';\nimport React, { Fragment } from 'react';\nimport { BlogMetaData } from '../../types';\nimport { getTerminatingString } from '../../util/getTerminatingString';\nimport './BlogCard.scss';\n\ninterface Props {\n  data: BlogMetaData;\n}\n\nconst BlogCard = ({\n  data: {\n    node: {\n      fields: { date, slug },\n      frontmatter: { author, title },\n    },\n  },\n}: Props): JSX.Element => (\n  <div className=\"blogCard\">\n    <Link className=\"title\" to={slug}>\n      {title}\n    </Link>\n    <h4>{date}</h4>\n    <p>\n      by{' '}\n      {author &&\n        author.map((user, i) => (\n          <Fragment key={user.id}>\n            <span>{user.name}</span>\n            {getTerminatingString(i, author.length)}\n          </Fragment>\n        ))}\n    </p>\n  </div>\n);\n\nexport default BlogCard;\n","import { graphql } from 'gatsby';\nimport React, { ReactNode } from 'react';\nimport BlogCard from '../components/BlogCard';\nimport Layout from '../components/Layout';\nimport { BlogPostsList } from '../types';\n\ntype Props = {\n  data: BlogPostsList;\n  location: Location;\n};\n\nconst AllBlogPosts = ({ data }: Props): ReactNode => (\n  <Layout title=\"Blogs at Nodejs\">\n    <main className=\"blog-grid-container\">\n      {!data.blogs.edges.length && <h1>No Blog Posts yet</h1>}\n      {data.blogs.edges.map(node => (\n        <BlogCard key={node.node.fields.slug} data={node} />\n      ))}\n    </main>\n  </Layout>\n);\n\nexport const pageQuery = graphql`\n  query AllBlogPostsPageQuery {\n    blogs: allMarkdownRemark(\n      filter: {\n        fileAbsolutePath: { regex: \"/blog/\" }\n        frontmatter: { title: { ne: \"mock\" } }\n      }\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            author {\n              id\n              name\n            }\n          }\n          fields {\n            date(formatString: \"MMMM DD, YYYY\")\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default AllBlogPosts;\n","export const getTerminatingString = (index: number, length: number): string => {\n  if (index < length - 2) return ', ';\n  if (index === length - 2) return ' and ';\n  return '';\n};\n"],"names":["data","node","fields","date","slug","frontmatter","author","title","className","Link","to","map","user","i","Fragment","key","id","name","getTerminatingString","length","Layout","blogs","edges","index"],"sourceRoot":""}